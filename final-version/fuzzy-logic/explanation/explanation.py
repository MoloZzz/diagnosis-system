labels = ['–°–ª–∞–±–∫–æ –≤–∏—Ä–∞–∂–µ–Ω–∏–π', '–ü–æ–º—ñ—Ä–Ω–æ –≤–∏—Ä–∞–∂–µ–Ω–∏–π', '–Ø—Å–∫—Ä–∞–≤–æ –≤–∏—Ä–∞–∂–µ–Ω–∏–π']

A1 = {'–°–ª–∞–±–∫–æ –≤–∏—Ä–∞–∂–µ–Ω–∏–π': 1.0, '–ü–æ–º—ñ—Ä–Ω–æ –≤–∏—Ä–∞–∂–µ–Ω–∏–π': 0.2, '–Ø—Å–∫—Ä–∞–≤–æ –≤–∏—Ä–∞–∂–µ–Ω–∏–π': 0.1}
A2 = {'–°–ª–∞–±–∫–æ –≤–∏—Ä–∞–∂–µ–Ω–∏–π': 0.0, '–ü–æ–º—ñ—Ä–Ω–æ –≤–∏—Ä–∞–∂–µ–Ω–∏–π': 1.0, '–Ø—Å–∫—Ä–∞–≤–æ –≤–∏—Ä–∞–∂–µ–Ω–∏–π': 0.0}
A3 = {'–°–ª–∞–±–∫–æ –≤–∏—Ä–∞–∂–µ–Ω–∏–π': 0.1, '–ü–æ–º—ñ—Ä–Ω–æ –≤–∏—Ä–∞–∂–µ–Ω–∏–π': 0.0, '–Ø—Å–∫—Ä–∞–≤–æ –≤–∏—Ä–∞–∂–µ–Ω–∏–π': 1.0}
A4 = {'–°–ª–∞–±–∫–æ –≤–∏—Ä–∞–∂–µ–Ω–∏–π': 0.0, '–ü–æ–º—ñ—Ä–Ω–æ –≤–∏—Ä–∞–∂–µ–Ω–∏–π': 0.5, '–Ø—Å–∫—Ä–∞–≤–æ –≤–∏—Ä–∞–∂–µ–Ω–∏–π': 0.4}

rules = {
    '–ì—Ä–∏–ø': [('–ù–∞—Å–º–∞—Ä–∫', A3), ('–í–∏—Å–æ–∫–∞ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞', A2), ('–ù–∞—Å–º–∞—Ä–∫', A1)],
    'Covid': [('–í–∏—Å–æ–∫–∞ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞', A3), ('–í—Ç—Ä–∞—Ç–∞ —Å–º–∞–∫—É', A2), ('–ó–∞–¥–∏—à–∫–∞', A1)],
    '–ó–∞—Å—Ç—É–¥–∞': [('–í–∏—Å–æ–∫–∞ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞', A1), ('–ù–∞—Å–º–∞—Ä–∫', A2), ('–í—Ç—Ä–∞—Ç–∞ —Å–º–∞–∫—É', A1)],
    '–ê–ª–µ—Ä–≥—ñ—è': [('–ù–∞—Å–º–∞—Ä–∫', A1), ('–ó–∞–¥–∏—à–∫–∞', A2)],
}

patient_data = {
    '–ù–∞—Å–º–∞—Ä–∫': A1,
    '–í–∏—Å–æ–∫–∞ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞': A4,
    '–ù–∞—Å–º–∞—Ä–∫': A1,
    '–ó–∞–¥–∏—à–∫–∞': A1
    # –í—Ç—Ä–∞—Ç–∞ —Å–º–∞–∫—É ‚Äì –≤—ñ–¥—Å—É—Ç–Ω—ñ–π
}

results = {}
explanations = {}

for disease, conditions in rules.items():
    scores = []
    details = []
    for var, expected_set in conditions:
        if var not in patient_data:
            details.append(f"- {var}: ‚ùå –í—ñ–¥—Å—É—Ç–Ω—ñ–π —É –ø–∞—Ü—ñ—î–Ω—Ç–∞")
            continue

        user_set = patient_data[var]
        match_score = max(
            min(user_set[label], expected_set.get(label, 0.0)) for label in labels
        )
        scores.append(match_score)

        # –ü–æ–±—É–¥–æ–≤–∞ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ –ø–æ—è—Å–Ω–µ–Ω–Ω—è
        details.append(
            f"- {var}:\n"
            f"    –û—á—ñ–∫—É–≤–∞–Ω–µ: {expected_set}\n"
            f"    –£ –ø–∞—Ü—ñ—î–Ω—Ç–∞: {user_set}\n"
            f"    –í—ñ–¥–ø–æ–≤—ñ–¥–Ω—ñ—Å—Ç—å: {match_score:.2f}"
        )

    if scores:
        avg_score = sum(scores) / len(scores)
    else:
        avg_score = 0.0

    results[disease] = avg_score
    explanations[disease] = "\n".join(details)

sorted_results = sorted(results.items(), key=lambda x: x[1], reverse=True)

print("üîç –†–µ–∑—É–ª—å—Ç–∞—Ç–∏ –¥—ñ–∞–≥–Ω–æ—Å—Ç–∏–∫–∏:\n")
for disease, score in sorted_results:
    print(f"‚úÖ {disease}: {score:.2f}")
    print(explanations[disease])
    print("-" * 50)
